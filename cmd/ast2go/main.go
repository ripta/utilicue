package main

import (
	"bytes"
	"fmt"
	"github.com/ripta/utilicue/pkg/goast/builder"
	"go/format"
	"go/token"
)

// go run ./cmd/ast2go
func main() {
	fset := token.NewFileSet()

	// type Title string
	title := builder.NewType("Title").
		WithComment("Title is a record of a person's title.").
		WithExpr(builder.NewIdent("string"))

	// type Identity struct {
	// 	First  string
	// 	Middle string
	// 	Last   string
	// 	Nick   *string
	// }
	identity := builder.NewType("Identity").
		WithComment("Identity is a record of a person's name, including first, middle, last, and nick name.").
		WithExpr(
			builder.NewStruct().
				AddField(builder.NewType("First").WithExpr(builder.NewIdent("string"))).
				AddField(builder.NewType("Middle").WithExpr(builder.NewIdent("string"))).
				AddField(builder.NewType("Last").WithExpr(builder.NewIdent("string"))).
				AddField(builder.NewType("Nick").WithStarExpr(builder.NewIdent("string"))),
		)

	node := builder.NewFile("db").
		AddDecl(title).
		AddDecl(identity).
		AsFileNode()

	buf := &bytes.Buffer{}
	buf.WriteString("// Code generated by ast2go. DO NOT EDIT.\n")
	if err := format.Node(buf, fset, node); err != nil {
		panic(err)
	}

	formatted, err := format.Source(buf.Bytes())
	if err != nil {
		panic(err)
	}

	fmt.Println(string(formatted))
}
